# Generated by Django 5.0.6 on 2024-07-07 13:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('item_category', models.CharField(choices=[('Vehicle', 'Vehicle'), ('Electronics', 'Electronics'), ('Furniture', 'Furniture'), ('Clothing', 'Clothing'), ('Books', 'Books'), ('Home Appliances', 'Home Appliances'), ('Toys', 'Toys'), ('Sports Equipment', 'Sports Equipment'), ('Jewelry', 'Jewelry'), ('Collectibles', 'Collectibles'), ('Others', 'Others')], max_length=50)),
                ('item_condition', models.CharField(choices=[('New', 'New'), ('Like New', 'Like New'), ('Good', 'Good'), ('Fair', 'Fair'), ('Poor', 'Poor')], max_length=10)),
                ('item_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Completed', 'Completed')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('offered_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offered_item', to='ecoswap_app.item')),
                ('requested_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_item', to='ecoswap_app.item')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', related_query_name='user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoswap_app.exchange')),
                ('paid_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paid_by_user', to='ecoswap_app.user')),
                ('received_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_by_user', to='ecoswap_app.user')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_text', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoswap_app.exchange')),
                ('receiver_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver_user', to='ecoswap_app.user')),
                ('sender_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_user', to='ecoswap_app.user')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoswap_app.user'),
        ),
        migrations.AddField(
            model_name='exchange',
            name='offered_by_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offered_by_user', to='ecoswap_app.user'),
        ),
        migrations.AddField(
            model_name='exchange',
            name='requested_by_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_by_user', to='ecoswap_app.user'),
        ),
    ]
